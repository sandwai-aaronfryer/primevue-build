"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var i=e(require("primevue/confirmationeventbus")),t=e(require("primevue/dialog")),o=e(require("primevue/button")),n=require("vue"),c={name:"ConfirmDialog",props:{group:String,breakpoints:{type:Object,default:null}},confirmListener:null,closeListener:null,data:()=>({visible:!1,confirmation:null}),mounted(){this.confirmListener=e=>{e&&e.group===this.group&&(this.confirmation=e,this.visible=!0)},this.closeListener=()=>{this.visible=!1,this.confirmation=null},i.on("confirm",this.confirmListener),i.on("close",this.closeListener)},beforeUnmount(){i.off("confirm",this.confirmListener),i.off("close",this.closeListener)},methods:{accept(){this.confirmation.accept&&this.confirmation.accept(),this.visible=!1},reject(){this.confirmation.reject&&this.confirmation.reject(),this.visible=!1}},computed:{header(){return this.confirmation?this.confirmation.header:null},message(){return this.confirmation?this.confirmation.message:null},blockScroll(){return!this.confirmation||this.confirmation.blockScroll},position(){return this.confirmation?this.confirmation.position:null},iconClass(){return["p-confirm-dialog-icon",this.confirmation?this.confirmation.icon:null]},acceptLabel(){return this.confirmation?this.confirmation.acceptLabel||this.$primevue.config.locale.accept:null},rejectLabel(){return this.confirmation?this.confirmation.rejectLabel||this.$primevue.config.locale.reject:null},acceptIcon(){return this.confirmation?this.confirmation.acceptIcon:null},rejectIcon(){return this.confirmation?this.confirmation.rejectIcon:null},acceptClass(){return["p-confirm-dialog-accept",this.confirmation?this.confirmation.acceptClass:null]},rejectClass(){return["p-confirm-dialog-reject",this.confirmation?this.confirmation.rejectClass||"p-button-text":null]},autoFocusAccept(){return void 0===this.confirmation.defaultFocus||"accept"===this.confirmation.defaultFocus},autoFocusReject(){return"reject"===this.confirmation.defaultFocus}},components:{CDialog:t,CDButton:o}};const r={class:"p-confirm-dialog-message"};c.render=function(e,i,t,o,c,s){const l=n.resolveComponent("CDButton"),a=n.resolveComponent("CDialog");return n.openBlock(),n.createBlock(a,{visible:c.visible,"onUpdate:visible":i[2]||(i[2]=e=>c.visible=e),modal:!0,header:s.header,blockScroll:s.blockScroll,position:s.position,class:"p-confirm-dialog",breakpoints:t.breakpoints},{footer:n.withCtx((()=>[n.createVNode(l,{label:s.rejectLabel,icon:s.rejectIcon,class:n.normalizeClass(s.rejectClass),onClick:i[0]||(i[0]=e=>s.reject()),autofocus:s.autoFocusReject},null,8,["label","icon","class","autofocus"]),n.createVNode(l,{label:s.acceptLabel,icon:s.acceptIcon,class:n.normalizeClass(s.acceptClass),onClick:i[1]||(i[1]=e=>s.accept()),autofocus:s.autoFocusAccept},null,8,["label","icon","class","autofocus"])])),default:n.withCtx((()=>[n.createElementVNode("i",{class:n.normalizeClass(s.iconClass)},null,2),n.createElementVNode("span",r,n.toDisplayString(s.message),1)])),_:1},8,["visible","header","blockScroll","position","breakpoints"])},module.exports=c;
